# Copyright (C) The libssh2 project and its contributors.
#
# SPDX-License-Identifier: BSD-3-Clause
#
name: CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

permissions: {}

jobs:
  build_cygwin:
    name: 'cygwin'
    runs-on: windows-latest
    timeout-minutes: 30
    env:
      SHELLOPTS: 'igncr'
      CYGWIN_NOWINPATH: '1'
    strategy:
      matrix:
        include:
          - { build: 'autotools', platform: 'x86_64' }
          - { build: 'cmake'    , platform: 'x86_64' }
      fail-fast: false
    steps:
      - run: git config --global core.autocrlf input
      - uses: actions/checkout@v3
      - uses: cygwin/cygwin-install-action@v4
        with:
          platform: ${{ matrix.platform }}
          packages: autoconf automake libtool cc make libssl-devel
          site: https://mirrors.kernel.org/sourceware/cygwin/

      - name: 'autotools autoreconf'
        if: ${{ matrix.build == 'autotools' }}
        shell: C:\cygwin\bin\bash.exe '{0}'
        run: autoreconf -fi
      - name: 'autotools configure'
        if: ${{ matrix.build == 'autotools' }}
        shell: C:\cygwin\bin\bash.exe '{0}'
        run: |
          # sshd tests sometimes hang
          mkdir bld && cd bld && ../configure --enable-werror --enable-debug \
            --with-crypto=openssl \
            --disable-docker-tests \
            --disable-sshd-tests

      - name: 'autotools build'
        if: ${{ matrix.build == 'autotools' }}
        shell: C:\cygwin\bin\bash.exe '{0}'
        run: make -C bld -j3
      - name: 'cmake configure'
        if: ${{ matrix.build == 'cmake' }}
        env:
          CMAKE_GENERATOR: 'Unix Makefiles'
        shell: C:\cygwin\bin\bash.exe '{0}'
        run: |
          cmake -B bld \
            -DCMAKE_C_COMPILER=gcc \
            -DENABLE_WERROR=ON \
            -DENABLE_DEBUG_LOGGING=ON \
            -DCRYPTO_BACKEND=OpenSSL \
            -DENABLE_ZLIB_COMPRESSION=ON \
            -DRUN_DOCKER_TESTS=OFF \
            -DRUN_SSHD_TESTS=OFF

      - name: 'cmake build'
        if: ${{ matrix.build == 'cmake' }}
        shell: C:\cygwin\bin\bash.exe '{0}'
        run: cmake --build bld --parallel 3
      - name: 'cmake tests'
        if: ${{ matrix.build == 'cmake' }}
        timeout-minutes: 10
        shell: C:\cygwin\bin\bash.exe '{0}'
        run: cd bld && ctest -VV --output-on-failure
